{{!-- EVERY INPUT BOX IS TO BE VALUE ATRIBUTE USING HBS --}}
<body>

    <div class="container my-container" style="max-width: 90%;">
        <div class="row  my-row-border">
            <h2 id="test-name"></h2>
        </div>

        <form id="form">
        <div class="row my-row my-row-border align-items-center"
            style="height: 35px;border-top-left-radius: 10px; border-top-right-radius: 10px;">
            <div class="col-1.5 my-col my-col-border  ">
                Question Type :
            </div>
            <div class="col-2 my-col my-col-border">
                <select name="question-type" id="question-type" value="{{data.type}}">
                    <option value="MCQ">MCQ</option>
                    <option value="notMCQ">notMCQ</option>
                </select>
            </div>
             <div class="col-6 my-col my-col-border text-center error-msg " >
               <p class="error-p" id="error"></p> 
            </div>
           
        </div>

        <div class="row my-row my-row-border">
            <div class="col-12 my-col my-col-color box ques">
                <p>Question:</p>
                <input type="text" id="question" value="{{data.question}}" oninput="hideError()">
            </div>
        </div>

        <div class="row my-row my-row-border option-div">
            <div class="col-12 my-col my-col-color box">
                <p>Option A:</p>
                <input type="text" id="optionA" value="{{data.optionA}}" oninput="hideError()">
            </div>
        </div>

        <div class="row my-row my-row-border option-div">
            <div class="col-12 my-col my-col-color box">
                <p>Option B:</p>
                <input type="text" id="optionB" value="{{data.optionB}}" oninput="hideError()">
            </div>
        </div>

        <div class="row my-row my-row-border option-div">
            <div class="col-12 my-col my-col-color box">
                <p>Option C:</p>
                <input type="text" id="optionC" value="{{data.optionC}}" oninput="hideError()">
            </div>
        </div>

        <div class="row my-row my-row-border option-div">
            <div class="col-12 my-col my-col-color box">
                <p>Option D:</p>
                <input type="text" id="optionD" value="{{data.optionD}}" oninput="hideError()">
            </div>


        </div>

        <div class="row my-row my-row-border option-div">
            <div class="col-12 my-col my-col-color box">
                <p>Correct Option:</p>
                <select name="correct-option" id="correct">
                    <option value="A">A</option>
                    <option value="B">B</option>
                    <option value="C">C</option>
                    <option value="D">D</option>
                </select>
            </div>


        </div>

        <div class="row my-row my-row-border">
            <div class="col-12 my-col my-col-color box option-div">
                <p>Marks:</p>
                <input class="small-input" type="number" id="score" value="{{data.score}}" oninput="hideError()">
            </div>

        </div>

        <div class="row my-row" style="height: 20px;"></div>

        <div class="row my-row my-row-border">
            <div class="col-2 my-col my-col-border box">
                <button  class="btn btn-success" type="button" onclick="validateEdit()">Done</button>

            </div>
           

        </div>
        </form>

        <div class="row my-row my-row-border"
            style="height: 20px; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;">

        </div>


        <div class="row " style="height:10px;"></div>
    </div>

    <script>
        // to set value for correct option
        document.getElementById('correct').value = `{{data.correct}}`

        changeQuestionType()
        document.getElementById('question-type').addEventListener('change', changeQuestionType)

        function changeQuestionType() {
            let qType = document.getElementById('question-type').value
            optionDiv = document.getElementsByClassName('option-div')
            if(qType == 'MCQ') {
                for(i = 0; i < optionDiv.length; i++) {
                    optionDiv[i].style.display = "block"
                }
            }
            else if(qType == 'notMCQ') {
                for(i = 0; i < optionDiv.length; i++) {
                    optionDiv[i].style.display = "none"
                }
            }
        }

        function editQuestion() {
            let tid = `{{data.tid}}`
            let qType = document.getElementById('question-type').value
            if(qType == 'MCQ') {
                let question = document.getElementById('question').value
                let optionA = document.getElementById('optionA').value
                let optionB = document.getElementById('optionB').value
                let optionC = document.getElementById('optionC').value
                let optionD = document.getElementById('optionD').value
                let correct = document.getElementById('correct').value
                let score = document.getElementById('score').value
                
                var xmlHttpRequest = new XMLHttpRequest()
                xmlHttpRequest.open("PUT", `/company/test/{{data.tid}}/question/{{data.qid}}`, true)
                xmlHttpRequest.setRequestHeader("Content-Type", "application/json")
                xmlHttpRequest.setRequestHeader("authorization", getCookie("authorization"));
                xmlHttpRequest.onreadystatechange = function () {
                    if (this.readyState === 4) {
                        if (this.status === 200) {
                            document.getElementById("error").innerText = JSON.parse(this.responseText).msg
                            window.location = `/edittest/{{data.tid}}`
                        }
                        else {
                            document.getElementById("error").innerText = JSON.parse(this.responseText).msg
                        }
                    }
                }
            
                xmlHttpRequest.send(JSON.stringify({ question: question, optionA: optionA, optionB: optionB, optionC: optionC, optionD: optionD, correct: correct, score: score, type: qType }))
            }
            else if(qType == 'notMCQ') {
                let question = document.getElementById('question').value
                
                var xmlHttpRequest = new XMLHttpRequest()
                xmlHttpRequest.open("PUT", `/company/test/{{data.tid}}/question/{{data.qid}}`, true)
                xmlHttpRequest.setRequestHeader("Content-Type", "application/json")
                xmlHttpRequest.setRequestHeader("authorization", getCookie("authorization"));
                xmlHttpRequest.onreadystatechange = function () {
                    if (this.readyState === 4) {
                        if (this.status === 200) {
                            document.getElementById("error").innerText = JSON.parse(this.responseText).msg
                            window.location = `/edittest/{{data.tid}}`
                        }
                        else {
                            document.getElementById("error").innerText = JSON.parse(this.responseText).msg
                        }
                    }
                }
            
                xmlHttpRequest.send(JSON.stringify({ question: question, type: qType }))
            }
        }

        function hideError() {
            let div = document.getElementById("error")
            if (div.childNodes[0]) {
                div.classList.remove("alert", "alert-danger")
                div.innerHTML = ''
            }
        }
    </script>
    <script src="/javascripts/question_validations.js"></script>
</body>